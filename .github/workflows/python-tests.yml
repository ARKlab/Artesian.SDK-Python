# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Artesian SDK Python 

on:
  push:
    branches: [ master ]
    tags:    
    - 'v[0-9]+\.[0-9]+\.[0-9]+'
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run flake8
      run: |
        flake8 .

    - name: Test Pytest
      run: |
        pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml

    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

  publish:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    needs: build
    env:
      python-version: '3.11'     

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
    - name: Build package
      run: |
        python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
      

