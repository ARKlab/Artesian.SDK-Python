name: Artesian SDK Python

on:
  push:
    branches: [master]
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run flake8
        run: |
          flake8 .

      # Uncomment and adjust this section once the issue is resolved
      # - uses: jordemort/action-pyright@v1
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     reporter: github-check
      #     lib:
      #     level: warning
      #     filter_mode: file

      - name: Install Pyright
        run: npm install -g pyright

      - name: Run Pyright
        run: pyright > pyright-results.txt

      - name: Run Pyright with reviewdog
        uses: jacopocinaark/action-pyright@main # Uses your fork
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          lib:
          level: warning
          filter_mode: file
          reviewdog_version: "latest"

      - name: Test Pytest
        run: |
          pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}

  publish:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    needs: build
    env:
      python-version: "3.11"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build package
        run: |
          python -m build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
